---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
  tests:
    name: tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: pwd
          POSTGRES_USER: memoriesbox
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: migrate
        env:
          POSTGRESQL_URL: postgres://memoriesbox:pwd@localhost:5432/memoriesbox?sslmode=disable&connect_timeout=10
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          make db-migrate-up
      - name: test
        env:
          # Functionnal tests
          MEMORIESBOX_TEST_DB_USER: memoriesbox
          MEMORIESBOX_TEST_DB_NAME: memoriesbox
          MEMORIESBOX_TEST_DB_PASS: pwd
          # SQLBoiler
          PSQL_PASS: pwd
        run: |
          make go-tests
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - name: Build
        run: |
          CGO_ENABLED=0 go build -ldflags="-s -w" -installsuffix nocgo -o bin/memoriesbox cmd/webapp/main.go
